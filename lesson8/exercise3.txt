
####### Exercise 3a #######

# Add some random text file
$ vi reflog.txt
$ git add reflog.txt 
$ git commit -m "Testing git reflog1"
[main 205affc] Testing git reflog1
 1 file changed, 1 insertion(+)
 create mode 100644 lesson8/reflog.txt

# Modify this file
$ vi reflog.txt 
$ git add reflog.txt 
$ git commit -m "Testing git reflog2"
[main e5bd02b] Testing git reflog2
 1 file changed, 1 insertion(+)

$ git log --oneline | head -4
e5bd02b Testing git reflog2
205affc Testing git reflog1
45c93e9 rebase interactive commit3 (amended test_file.py)
bf11eb1 rebase interactive commit1 & commit2 (modified)


####### Exercise 3b #######

$ git reflog
e5bd02b (HEAD -> main) HEAD@{0}: commit: Testing git reflog2
205affc HEAD@{1}: commit: Testing git reflog1
45c93e9 HEAD@{2}: rebase (finish): returning to refs/heads/main
45c93e9 HEAD@{3}: rebase (start): checkout HEAD~3
7636b66 HEAD@{4}: commit: rebase interactive commit4   # Removed commit is here!


####### Exercise 3c #######

# Recover the lost commit into a new branch.
$ git checkout -b l8_lost_commit 7636b66
Switched to a new branch 'l8_lost_commit'

# We have recovered our "commit4" in this new branch
$ git log --oneline | head -3
7636b66 rebase interactive commit4
45c93e9 rebase interactive commit3 (amended test_file.py)
bf11eb1 rebase interactive commit1 & commit2 (modified)

$ git diff 45c93e9 7636b66
diff --git a/lesson8/rebase.py b/lesson8/rebase.py
new file mode 100644
index 0000000..696d24a
--- /dev/null
+++ b/lesson8/rebase.py
@@ -0,0 +1 @@
+print("Testing interactive rebasing")


####### Exercise 3d #######
$ git checkout main
Switched to branch 'main'
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

$ git branch -D l8_lost_commit
Deleted branch l8_lost_commit (was 7636b66).

